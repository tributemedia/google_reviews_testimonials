<?php

use Drupal\google_reviews_testimonials\Entity\TestimonialGMBReview;
use Drupal\Core\Config\FileStorage;
use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\node\Entity\Node;

function google_reviews_testimonials_install() {

  setModuleWeight();

}

/*
*****************************
*** UPDATES *****************
*****************************
*/

/**
 * Set the module weight to be higher than the Testimonial 
 * module's to override view templates.
 */
function google_reviews_testimonials_update_9201() {

  setModuleWeight();

}

/**
 * Migrate stars field from TestimonialGMBReview to Testimonial
 */
function google_reviews_testimonials_update_9101() {

  // Add new field on Testimonial for stars
  $configPath = drupal_get_path('module', 'google_reviews_testimonials') 
      . '/config/install';
  $configDir = new FileStorage($configPath);
  $fieldConfig = $configDir->read('field.field.node.testimonial.field_testimonial_num_stars');
  $fieldStorageConfig = $configDir->read('field.storage.node.field_testimonial_num_stars');
  $fieldAdded = FALSE;

  if(!FieldStorageConfig::loadByName($fieldStorageConfig['entity_type'], 
    $fieldStorageConfig['field_name'])) {
    
    FieldStorageConfig::create($fieldStorageConfig)->save();

  }
  else {

    \Drupal::messenger()->addMessage('num_stars field storage already added.');

  }
  
  if(!FieldConfig::loadByName($fieldConfig['entity_type'], 
    $fieldConfig['bundle'], $fieldConfig['field_name'])) {

    FieldConfig::create($fieldConfig)->save();
    $fieldAdded = TRUE;

  }
  else {

    \Drupal::messenger()->addMessage('num_stars field already added.');

  }

  // Transfer value from stars field on config entity to testimonial for each review
  if($fieldAdded) {

    $starMappings = [];
    $reviewConfigs = TestimonialGMBReview::loadMultiple();
  
    foreach($reviewConfigs as $reviewConfig) {
      if(isset($reviewConfig->starRating)) {
        $starMappings[$reviewConfig->getTID()] = $reviewConfig->starRating;
      }
    }
  
    $testimonials = Node::loadMultiple(array_keys($starMappings));
    $connection = \Drupal::service('database');
    
    // Starting a transaction to rollback changes in case of failure
    $transaction = $connection->startTransaction();
    foreach($testimonials as $testimonial) {
    
      $starVal = $starMappings[$testimonial->id()];
      $testimonial->set('field_testimonial_num_stars', $starVal);
      $applied = FALSE;
      $attempts = 0;
  
      while(!$applied && !$failed) {
      
        try {
        
          $testimonial->save();
          $applied = TRUE;
  
        }
        catch(\Exception $e) {
        
          if($attempts < 5) {
          
            $attempts++;
  
          }
          else {
          
            $errorMessage = 'Could not save changes to testimonial (ID: ' . $testimonial->id()
              . ').';
            $failed = TRUE;
            \Drupal::messenger()->addError($errorMessage);
            \Drupal::logger('google_reviews_testimonials')->error($errorMessage);
  
          }
  
        }
  
      }
  
      if($failed) {
      
        $transaction->rollback();
        break;
  
      }
  
    }

  }

}

/*
*****************************
*** CUSTOM FUNCTIONS ********
*****************************
*/

function setModuleWeight() {

  $moduleList = \Drupal::service('extension.list.module')->getList();

  // Set module weight higher than Testimonials to override templates
  if(isset($moduleList['testimonial'])) {

    $tWeight = $moduleList['testimonial']->weight;
    module_set_weight('google_reviews_testimonials', $tWeight+1);

  }

}
