<?php

use Drupal\google_reviews_testimonials\Entity\TestimonialGMBReview;
use Drupal\node\Entity\Node;

/**
 * Implements hook_cron()
 */
function google_reviews_testimonials_cron() {

  \Drupal::logger('google_reviews_testimonials')
        ->notice('Cron job running.');

  // Every 12 hours
  $interval = 12 * 60 * 60;

  $nextRun = \Drupal::state()->get('google_reviews_testimonials.next_exec');

  if(empty($nextRun)) {

    \Drupal::state()->set('google_reviews_testimonials.next_exec', 
      time() + $interval);

  }
  else {

    // This block queues a job for the review checking worker at the 
    // interval defined above.
    if(time() >= $nextRun) {

      $queueFactory = \Drupal::service('queue');
      $rcQueue = $queueFactory->get('google_reviews_testimonials_rcq');
      $rcQueue->createItem(new \stdClass());
      \Drupal::logger('google_reviews_testimonials')
        ->notice('Review check queued.');

      \Drupal::state()->set('google_reviews_testimonials.next_exec', 
        time() + $interval);

    }

  }

  \Drupal::logger('google_reviews_testimonials')
        ->notice('Cron job finished.');
}

/**
 * Implements hook_entity_delete($entity)
 *
 * WARNING: Facing deprecation due to:
 * https://www.drupal.org/project/drupal/issues/2551893
 */
function google_reviews_testimonials_entity_delete($entity) {

  if($entity instanceof Node && $entity->getType() == 'testimonial') {

    $tid = $entity->id();
    $query = \Drupal::entityQuery('testimonial_gmb_review')
        ->condition('tid', $tid);
    $linkedEntityIDs = $query->execute();
    
    foreach($linkedEntityIDs as $linkedEntityID) {

      $linkedEntity = TestimonialGMBReview::load($linkedEntityID);
      $linkedEntity->delete();
      \Drupal::messenger()
        ->addMessage('Linked TestimonialGMBReview deleted.');

    }

  }

  

}